#
# 1. Поработайте с переменными, создайте несколько, выведите на экран.
#   Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.
#
def format_var(var):
    print('Переменная input_var.\n\tЗначение: ', var, '\n\tТип: ', type(var))

str_val = 'Строка'  # type String
print('Переменная str_val.\n\tЗначение: ', str_val, '\n\tТип: ', type(str_val))

int_val = 10  # type Integer
print('Переменная int_val.\n\tЗначение: ', int_val, '\n\tТип: ', type(int_val))

float_val = 1.0  # type Float
print('Переменная double_val.\n\tЗначение: ', float_val, '\n\tТип: ', type(float_val))

boolean_val = True  # type Boolean
print('Переменная boolean_val.\n\tЗначение: ', boolean_val, '\n\tТип: ', type(boolean_val))

input_var = input('Введите строковое значение: ')
format_var(input_var)

input_var = int(input('Введите целое число: '))
format_var(input_var)

input_var = float(input('Введите десятичное число: '))
format_var(input_var)


#
# 2. Пользователь вводит время в секундах.
#    Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс.
#    Используйте форматирование строк.
#

tsec = sec = int(input('Введите количество секунд: '))

# Первый вариант решения
i = 2
list = []

while i >= 0:
    period = 60 ** i
    list.append(tsec // period)
    tsec %= period
    i -= 1

print('{:02d}:{:02d}:{:02d}'.format(list[0], list[1], list[2]))

# Второй вариант решения (лаконичный)
print('{:02d}:{:02d}:{:02d}'.format(sec // 3600, sec % 3600 // 60, sec % 3600 % 60))

# 3. Узнайте у пользователя число n.
#    Найдите сумму чисел n + nn + nnn.
#    Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
n = ''

while True:
    summ = 0
    n = input('Введите число от 1 до 9: ')

    if n.isnumeric() == True and len(n) == 1:
        break

i = int(n)

while i > 0:
    summ += int(n * i)
    i -= 1

print('Результат: ', summ)

# 4. Пользователь вводит целое положительное число.
#    Найдите самую большую цифру в числе.
#    Для решения используйте цикл while и арифметические операции.
n = ''

while True:
    summ = 0
    n = input('Введите целое положительное число: ')

    if n.isnumeric() == True or n != '0':
        n = int(n)
        break

    print('Введённое значение должно быть целым числом больше нуля')

max = 0

while n > 0:
    tmp = n % 10
    n //= 10

    if tmp > max:
        max = tmp

    if max == 9:
        break

print('Самая большая цифра в числе: ', max)

# 5. Запросите у пользователя значения выручки и издержек фирмы.
#    Определите, с каким финансовым результатом работает фирма.
#    Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки.
#    Выведите соответствующее сообщение.

# 5. Запросите у пользователя значения выручки и издержек фирмы.
#    Определите, с каким финансовым результатом работает фирма.
#    Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки.
#    Выведите соответствующее сообщение.

while True:
    profit = input('Укажите прибыль своей компании: ')
    cost = input('Укажите издержки своей компании: ')

    if profit.isnumeric() and cost.isnumeric():
        profit = int(profit)
        cost = int(cost)
        break

    print('Введённое значение должно быть натуральным числом или равно нулю')

if profit > cost:
    print('Прекрасно! Ваша компания работает и заарабатывает')

    # 6. Если фирма отработала с прибылью, вычислите рентабельность выручки.
    #    Это отношение прибыли к выручке.
    #    Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.
    while True:
        staff = input('Укажите количество сотрудников: ')

        if staff.isnumeric() == True or staff != '0':
            staff = int(staff)
            break

        print('Введённое значение должно быть целым числом больше нуля')

    profit_per_staff = str((profit - cost) / staff)

    print('На каждого сотрудника приходится ' + profit_per_staff + ' руб. прибыли')
elif profit == cost:
    print('Бывает. Ваша компания вышла в ноль, что по сегодняшнему дню не так уж плохо')
else:
    print('Надо что-то делать! Ваша компания движется банкротству.')

# 7 (Дополнительно). Спортсмен занимается ежедневными пробежками.
#   В первый день его результат составил a километров.
#   Каждый день спортсмен увеличивал результат на 10% относительно предыдущего.
#   Требуется определить номер дня, на который результат спортсмена составит не менее b километров.
#   Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
#
#   Например: a = 2, b = 3.
#   Результат:
#   1-й день: 2
#   2-й день: 2,2
#   3-й день: 2,42
#   4-й день: 2,66
#   5-й день: 2,93
#   6-й день: 3,22
#   Ответ: на шестой день спортсмен достиг результата — не менее 3 км.

while True:
    start = input('Сколько километров пробежал спортсмен в первый день: ')
    target = input('Цель спорсмена в километрах: ')

    if (start.isnumeric() == True or start != '0') and (target.isnumeric() == True or target != '0'):
        today = start = int(start)
        target = int(target)
        if start > target:
            print('Целевое значение должно быть больше стартового')
            continue
        break

    print('Введённое значение должно быть целым числом больше нуля')

count = 1

while today <= target:
    today += today * 0.1
    count += 1

print('Своей цели спортсмен достгнет на ' + str(count) + ' день')

